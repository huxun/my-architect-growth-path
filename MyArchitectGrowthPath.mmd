Mind Map generated by NB MindMap plugin   
> __version__=`1.1`
---

# 架构师

## 大数据
> collapsed=`true`


### hadoop
> fillColor=`#169034`


### spark

### flink

### storm

### hive
> fillColor=`#169034`


### hbase
> fillColor=`#169034`


## 网络
> collapsed=`true`


### IO

### Netty

### tcp/ip

## 消息中间件
> collapsed=`true`


### kafka

### RabbitMQ

### RockitMQ

### ActiveMQ

## 缓存
> collapsed=`true`,leftSide=`true`


### Redis
> collapsed=`true`,fillColor=`#169034`


#### 存储
> collapsed=`true`


##### AOF
> collapsed=`true`


###### 镜像\+日志，默认关闭<br/>appendfsync always<br/>appendfsync everysec<br/>appendfsync no
> align=`left`


##### RDB
> collapsed=`true`


###### fork子进程，copyonwrite<br/>默认开启，配置：<br/>save 900 1<br/>save 300 10<br/>save 60 10000
> align=`left`


#### 缓存
> collapsed=`true`


##### 一致性哈希<br/>hash散列

#### 数据库
> collapsed=`true`


##### cluster

#### 常见问题：<br/>击穿，加锁<br/>雪崩，加随机过期时间<br/>穿透，布隆过滤器
> fillColor=`#169034`


### Guava

## 数据库

### Mysql
> collapsed=`true`,fillColor=`#169034`


#### 索引
> collapsed=`true`


##### 只在离散度高的字段建立索引

##### 联合索引最左匹配

##### 回表

##### 覆盖索引

#### 事务
> collapsed=`true`


##### 四大特性：ACID
> align=`left`,collapsed=`true`


###### 原子性Atomicity：undo log

###### 一致性Consistency

###### 隔离性Isolation：锁\+mvcc
> collapsed=`true`


####### 事务的四种隔离级别
> collapsed=`true`


######## Read Uncommitted读未提交
> collapsed=`true`


######### 未解决任务并发问题

######## Read Committed读已提交
> collapsed=`true`


######### 解决脏读问题

######## Repeatable Read可重复读
> collapsed=`true`


######### 解决不可重复读问题

######## Serializable串行化
> collapsed=`true`


######### 解决所有问题

###### 持久性Durability：redo log \+ 双写缓存

##### 事务并发的三大问题
> collapsed=`true`


###### 脏读：一个事务读取到了其他事务未提交的数据，造成读不一致

###### 不可重复读：一个事务读取到了其他事务已提交的数据造成读不一致update/delete

###### 幻读：一个事务读取到了其他事务插入的数据，造成读不一致 insert

##### 锁
> collapsed=`true`


######  常用锁分类
> collapsed=`true`


####### 排他锁
> collapsed=`true`


######## select \.\.\. for update

####### 共享锁
> collapsed=`true`


######## select \.\.\.  lock in share mode

###### 无索引时加锁会锁表

#### 性能优化
> collapsed=`true`


##### SQL和索引的优化

##### 表结构和存储引擎的优化

##### 架构优化
> collapsed=`true`


###### 缓存

###### 主从读写分离

###### 分库分表

##### 操作系统，MySQL配置参数

##### 硬件

### MongoDB

### ES

## 高并发
> collapsed=`true`,fillColor=`#169034`,leftSide=`true`


### 负载均衡
> collapsed=`true`


#### LVS
> collapsed=`true`


##### DR,TUN,NAT

##### 基于keepalived的高可用

## 分布式
> collapsed=`true`,leftSide=`true`


### zookeeper

### 分布式锁
> collapsed=`true`


#### MySQL唯一索引

#### Redis
> collapsed=`true`


##### setnx<br/>redisson

##### redlock

#### ZK

#### etcd

### 分布式id
> collapsed=`true`


#### snowflake
> collapsed=`true`,fillColor=`#169034`


##### 64bit存储:<br/>1bit不用，41bit时间戳，10bitWorkerID，12bit序列号<br/>时钟回拨时可能会发号重复
> align=`left`


#### Leaf
> collapsed=`true`


##### Leaf\-segment
> fillColor=`#169034`


##### Leaf\-snowflake

#### uuid
> collapsed=`true`,fillColor=`#169034`


##### 业界一共有5种方式生成UUID<br/>缺点：太长且不连续

### 分布式事务
> collapsed=`true`


#### 2pc/3pc
> collapsed=`true`


##### seata
> collapsed=`true`


###### 只适用于有数据库参与的情况

##### lcn

#### 消息队列\+事件表

#### tcc
> collapsed=`true`


##### 应用场景：<br/>存在不支持acid事务的关系型数据库，本质是通过业务回滚<br/>空回滚：try未执行cancel执行<br/>幂等：confirm/cancel多次执行<br/>悬挂：Cancel在Try之前执行 <br/>使用标记或者状态机等机制解决
> align=`left`


#### 可靠消息最终一致性

#### 最大努力通知

### CAP和Base

## 源码
> collapsed=`true`


### spring源码

### mybatis源码

### Netty源码

## 框架
> collapsed=`true`


### SpringCloud

### SpringCloudAlibaba

### Dubble

### spring security

## 组件
> collapsed=`true`


### MyCat

### sharding\-jdbc

## 安全
> collapsed=`true`,fillColor=`#169034`,leftSide=`true`


### https原理

### xss

### csrf

## 开发工具
> collapsed=`true`,leftSide=`true`


### git

### maven

### idea

## DevOps
> collapsed=`true`


### docker

### k8s

### ELK

## Java基础
> collapsed=`true`,leftSide=`true`


### JVM

### 多线程
> collapsed=`true`


#### synchronized
> collapsed=`true`


##### 锁升级：<br/>1\. 偏向锁<br/>2\. 自旋锁cas<br/>3\. 重量级锁

#### volatile
> collapsed=`true`


##### 作用：<br/>1\. 保证线程可见性<br/>2\. 禁止指令重排序

### 协程

## 设计模式
> leftSide=`true`


## 算法
> leftSide=`true`

